<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"  
    xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/mvc   
    	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 对项目中的所有类进行扫描以完成Bean创建并进行自动注入。  
           支持 @Controller、@Service 以及 @Repository 和 @Component -->
	<!-- 扫描项目中com.fh.shop.controller包下所有的类，从而使类中的@Controller注解生效 -->
    <context:component-scan base-package="com.fh.shop.backend.web.controller"/>

    <!--上传文件解析-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--文件的最大上传大小 单位:字节-->
        <property name="maxUploadSize" value="10000000"/>
    </bean>
    
    <!-- 开启注解驱动 -->
    <mvc:annotation-driven/>

	<!--
        jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
        如/view/welcome.jsp对应的视图名就是：welcome
        这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/><!-- 匹配所有路径:拦截所有交给springMVC处理的请求 -->
    		<bean class="com.fh.shop.backend.interceptor.LoginInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    
    
   <bean id="logAspect" class="com.fh.shop.backend.aspect.LogAspect"></bean>

    <aop:config>
    	<aop:aspect ref="logAspect">
    		<aop:pointcut expression="execution(* com.fh.shop.backend.web.controller..*.add*(..))||execution(* com.fh.shop.backend.web.controller..*.del*(..))||execution(* com.fh.shop.backend.web.controller..*.update*(..))||execution(* com.fh.shop.backend.web.controller..*.login(..))||execution(* com.fh.shop.backend.web.controller..*.logout(..))" id="logPointCut"/>
    		<aop:around method="doLog" pointcut-ref="logPointCut"/>
    	</aop:aspect>
    </aop:config>
    
<!--     InfoAspect infoAspect = new  com.fh.shop.backend.aspect.InfoAspect() -->
<!--     创建java对象  springIOC特性 -->
<!--     <bean id="infoAspect" class="com.fh.shop.backend.aspect.InfoAspect"/> -->
    
<!--     <aop:config> -->
<!--     	<aop:aspect ref="infoAspect"> -->
<!--     		<aop:pointcut expression="execution(* com.fh.shop.backend.web.controller..*.*(..))" id="pointCut"/> -->
<!--     		<aop:around method="say" pointcut-ref="pointCut"/> -->
<!--     	</aop:aspect> -->
<!--     </aop:config> -->

	
    
    
  
    
    



    
   
	
</beans>